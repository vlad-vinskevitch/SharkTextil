version: "3"

services:

  postgresql:
    container_name: postgresql
    image: 'bitnami/postgresql:latest'
    restart: always
    environment:
      POSTGRESQL_USERNAME: root
      POSTGRESQL_PASSWORD: root
      POSTGRESQL_DATABASE: shark_textil
    ports:
      - target: 5432
        published: 5433
        protocol: tcp
        mode: host
    networks:
      - net
    volumes:
      - postgresql-persistence:/bitnami/postgresql

  liquibase:
    container_name: liquibase
    build: ./database
    environment:
      - LIQBASE_URL_POSTGRESQL=jdbc:postgresql://postgresql:5432/shark_textil?user=root&password=root
    depends_on:
      - postgresql
    networks:
      - net

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    networks:
      - net
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - net
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/bitnami

volumes:
  zookeeper_data:
  kafka_data:
  postgresql-persistence:
  mongodb_data:


networks:
  net:
